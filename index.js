const TelegramApi = require('node-telegram-bot-api');
const { menu, spherechild, sphereolds, test1, years, years9, years6, years13, years18, district, getTaro, category, limit, consult, back, paidButton, paidConsult, menuConst } = require('./options');
require('dotenv').config();
const UserModel = require('./models.js')
const token = process.env.TOKEN;
const sequelize = require('./db.js')


const bot = new TelegramApi(token, { polling: true })
const { getRandomCard } = require('./getRandomCard.js');
const { sendInvoice, handlePreCheckoutQuery, handleSuccessfulPayment } = require('./payments.js');


const start = async () => {

    try {
        await sequelize.authenticate();
        await sequelize.sync();
        console.log('Connected to database...')

    } catch (error) {
        console.error(chalk.red('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î'), error);
    }

    bot.setMyCommands([
        { command: '/start', description: "–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∑–∞–Ω–æ–≤–æ" },
      
    ]);

    const userStates = {};

    bot.on('message', async msg => {
        try {
            const username = msg.chat.username;
            const text = msg.text;
            const firstName = msg.chat.first_name;
            const chatId = msg.chat.id;
            const messageId = msg.message_id;
            
            if (text === '/pay') {

                await sendInvoice(bot, chatId);
            }


            if (text === '/start') {
                const user = await UserModel.findOrCreate({ where: { chatId: chatId }, defaults: { chatId: chatId, firstName: firstName, username: username }})
                const table = await UserModel.findAll()
                let pass = await bot.getChatMember("@tkkd13", msg.from.id);
                if(pass.status==='left'){
                     await bot.sendMessage(chatId, "–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –Ω—É–∂–Ω–æ" +" *–ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è* "+ "–Ω–∞ –º–æ–π –∫–∞–Ω–∞–ª",{parse_mode:'MarkdownV2',reply_markup:menu.reply_markup});
                }
                else if(messageId!= null){ 
                await bot.sendMessage(chatId,"–ß—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç —Å–µ–≥–æ–¥–Ω—è?",menuConst );
                await bot.sendSticker(chatId, "./sticker.webp")
                   
                }
                
            }
            const user = await UserModel.findOne({ where: { chatId: chatId } });

            if(user.consultMessageId===1 && text!='/start'){

                const dateRegex = /^(0?[1-9]|[12][0-9]|3[01])\.(0?[1-9]|1[012])\.(19|20)\d\d$/;
                if (dateRegex.test(text)) {
                    // –†–∞–∑–±–∏–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É –Ω–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
                    const [day, month, year] = text.split('.').map(Number);
            
                    // –°—É–º–º–∏—Ä—É–µ–º —Ü–∏—Ñ—Ä—ã
                    let sum = [...(day.toString() + month.toString() + year.toString())].reduce((acc, digit) => acc + parseInt(digit), 0);
            
                    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —á–∏—Å–ª–æ —Å—É–¥—å–±—ã
                    while (sum > 9) {
                        sum = sum.toString().split('').reduce((acc, digit) => acc + parseInt(digit), 0);
                    }
                
                    if(sum === 1) {
                        await bot.sendPhoto(chatId,'./img/1.jpg')
                        await bot.sendMessage(chatId, `‚ú®<b>–ß–∏—Å–ª–æ —Å—É–¥—å–±—ã ${sum}</b>‚ú®\n\n–ê–±–º–∏—Ü–∏–æ–∑–Ω—ã–π –∏ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä—ã–º —É–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–ª–Ω—Ü–µ. –ß–µ–ª–æ–≤–µ–∫, —Ä–æ–∂–¥–µ–Ω–Ω—ã–π –ø–æ–¥ –∑–Ω–∞–∫–æ–º –µ–¥–∏–Ω–∏—Ü—ã - —ç—Ç–æ —á–µ–ª–æ–≤–µ–∫ —Å –æ–≥—Ä–æ–º–Ω–æ–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —ç–Ω–µ—Ä–≥–∏–µ–π. –í—ã–¥–∞—é—â–∏–µ—Å—è –ª–∏—á–Ω–æ—Å—Ç–∏, —Å –≤—ã—Å–æ–∫–∏–º —Å–∞–º–æ–º–Ω–µ–Ω–∏–µ–º \n 
                        \n<b> –ú–∏–Ω—É—Å—ã </b> üòà\n\n–≠–º–æ—Ü–∏–∏ –∏ –∞–≥—Ä–µ—Å—Å–∏—è —á–∞—â–µ –±–µ—Ä–µ—Ç –≤–≤–µ—Ä—Ö –Ω–∞ –Ω–∏–º–∏, —á–µ–º –∑–¥—Ä–∞–≤—ã–π —Å–º—ã—Å–ª. –£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–∏–µ –∞–º–±–∏—Ü–∏–π-–≥–ª–∞–≤–Ω–∞—è —Ü–µ–ª—å –∏—Ö –∂–∏–∑–Ω–∏, —Ä–∞–¥–∏ –∫–æ—Ç–æ—Ä–æ–π –æ–Ω–∏ —Å–ø–æ—Å–æ–±–Ω—ã –ø–æ–π—Ç–∏ –ø–æ –≥–æ–ª–æ–≤–∞–º`,{parse_mode:'HTML',reply_markup:paidConsult.reply_markup});      
                    }
                    if(sum === 2) {
                        await bot.sendPhoto(chatId,'./img/2.jpg')
                        await bot.sendMessage(chatId, `‚ú®<b>–ß–∏—Å–ª–æ —Å—É–¥—å–±—ã ${sum}</b>‚ú®\n\n–ù–∏–∫–æ–≥–¥–∞ –Ω–µ –±—É–¥–µ—Ç –≤—Å—Ç—É–ø–∞—Ç—å –≤ –∫–æ–Ω—Ñ–ª–∏–∫—Ç —Å –æ–∫—Ä—É–∂–∞—é—â–∏–º–∏, –Ω–µ –ø—ã—Ç–∞—é—Ç—Å—è –≤—ã–¥–µ–ª–∏—Ç—å—Å—è –ª—é–±–æ–π —Ü–µ–Ω–æ–π, –ø–æ–¥—á–∏–Ω—è—Ç—å —Å–µ–±–µ –¥—Ä—É–≥–∏—Ö –∏–ª–∏ –Ω–∞–≤—è–∑—ã–≤–∞—Ç—å –∏–º —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é –≤–æ–ª—é. –ò–º —Å–≤–æ–π—Å—Ç–≤–µ–Ω–Ω–æ –ø—Ä–æ—â–∞—Ç—å –∏ –≤—Å–µ–º—É –ª–µ–≥–∫–æ –Ω–∞—Ö–æ–¥–∏—Ç—å –æ–ø—Ä–∞–≤–¥–∞–Ω–∏–µ. –î–≤–æ–π–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –∂–µ–Ω—Å–∫–∏–º —á–∏—Å–ª–æ–º –∏ –ø–æ—ç—Ç–æ–º—É –æ–Ω–∏ —É–º–µ—é—Ç —Ü–µ–Ω–∏—Ç—å —É—Ç–æ–Ω—á–µ–Ω–Ω–æ–µ, –¥—É—Ö–æ–≤–Ω–æ–µ –∏ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–µ. –≠—Ç–∏ –ª—é–¥–∏ —á—É–≤—Å—Ç–≤—É—é—Ç –æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ –∫ –ª—é–±—ã–º –ø—Ä–æ—è–≤–ª–µ–Ω–∏—è–º –º–∞–ª–æ–¥—É—à–∏—è\n 
                        \n<b> –ú–∏–Ω—É—Å—ã </b> üòà\n\n–õ–∏—Ü–µ–º–µ—Ä–∏–µ, –ø—ã—Ç–∞—é—Ç—Å—è —É–≥–æ–¥–∏—Ç—å –≤—Å–µ–º, –∏–∑-–∑–∞ —á–µ–≥–æ –Ω–µ –º–æ–≥—É—Ç –æ—Ç—Å—Ç–æ—è—Ç—å —Å–≤–æ–∏ –≥—Ä–∞–Ω–∏—Ü—ã. –°–æ–≤—Ä—É—Ç, —á—Ç–æ–±—ã –Ω–µ –æ–±–∏–¥–µ—Ç—å.`,{parse_mode:'HTML',reply_markup:paidConsult.reply_markup});
                    }
                    if(sum === 3) {
                        await bot.sendPhoto(chatId,'./img/3.jpg')
                        await bot.sendMessage(chatId, `‚ú®<b>–ß–∏—Å–ª–æ —Å—É–¥—å–±—ã ${sum}</b>‚ú®\n\n–û–Ω–∏ –ª—é–±—è—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ —Ü–µ–Ω—Ç—Ä–µ –≤–Ω–∏–º–∞–Ω–∏—è, –∏–º –¥–æ—Å—Ç–∞–≤–ª—è—é—Ç —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ –ø–æ—Ö–≤–∞–ª—ã –∏ –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç—ã. –£–º–µ—é—Ç –Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è –∂–∏–∑–Ω—å—é —Å–∞–º–∏ –∏ –¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –º–Ω–æ–≥–æ —Ä–∞–¥–æ—Å—Ç–∏ –æ–∫—Ä—É–∂–∞—é—â–∏–º. –í—Å–µ–≥–¥–∞ –ø—Ä–∏–Ω–∏–º–∞—é—Ç –∫–∞–∫ –¥–æ–ª–∂–Ω–æ–µ —Ç–æ, —á—Ç–æ —É–≥–æ—Ç–æ–≤–∏–ª–∞ –∏–º —Å—É–¥—å–±–∞. –ú–∞–ª–æ –∫—Ç–æ —É—Å—Ç–æ–∏—Ç –ø–µ—Ä–µ–¥ –∏—Ö –æ–±–∞—è–Ω–∏–µ–º –∏ –æ—á–∞—Ä–æ–≤–∞–Ω–∏–µ–º. –ë–æ–ª—Ç–ª–∏–≤—ã–µ, –ª–µ–≥–∫–æ –Ω–∞–ª–∞–∂–∏–≤–∞—é—Ç –∫–æ–Ω—Ç–∞–∫—Ç—ã. –ö–æ –≤—Å–µ–º—É –ø—Ä–æ—á–µ–º—É –æ–Ω–∏ –æ—Ç–ª–∏—á–∞—é—Ç—Å—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é –∏ –Ω–∞—Ö–æ–¥—á–∏–≤–æ—Å—Ç—å—é, –∞ —Å–≤–æ–∏–º —ç–Ω—Ç—É–∑–∏–∞–∑–º–æ–º –∏ –æ–ø—Ç–∏–º–∏–∑–º–æ–º –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—Ç –¥—Ä—É–≥–∏—Ö, –Ω–æ —Ä–µ–¥–∫–æ —Ö–æ—Ç—è—Ç –±—ã—Ç—å –ª–∏–¥–µ—Ä–æ–º\n 
                        \n<b> –ú–∏–Ω—É—Å—ã </b> üòà\n\n–¢—â–µ—Å–ª–∞–≤–∏–µ, –æ–Ω–∏ –Ω–µ —Ä–µ—à–∞—é—Ç—Å—è —Ö–≤–∞–ª–∏—Ç—å –¥—Ä—É–≥–∏—Ö, —á–∞—â–µ –≤—ã—Å—Ç—É–ø–∞—é—Ç –∫–∞–∫ —Å—É—Ä–æ–≤—ã–π –∫—Ä–∏—Ç–∏–∫.`,{parse_mode:'HTML',reply_markup:paidConsult.reply_markup});
                      
                    }
                    if(sum === 4) {
                        await bot.sendPhoto(chatId,'./img/4.jpg')
                        await bot.sendMessage(chatId, `‚ú®<b>–ß–∏—Å–ª–æ —Å—É–¥—å–±—ã ${sum}</b>‚ú®\n\n–í –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–µ —Å–≤–æ–µ–º, —ç—Ç–æ –∫–æ–Ω—Å–µ—Ä–≤–∞—Ç–æ—Ä—ã, —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤—É—é—â–∏–µ—Å—è –≤ –∂–∏–∑–Ω–∏ —Ä–∞–∑—É–º–æ–º –∏ –∑–¥—Ä–∞–≤—ã–º —Å–º—ã—Å–ª–æ–º. –ò–º —á–∞—Å—Ç–æ –≤—ã–ø–∞–¥–∞–µ—Ç —à–∞–Ω—Å –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—å—Å—è –≤–ø–µ—Ä–µ–¥, –Ω–æ –∏—Ö —Å–æ–º–Ω–µ–≤–∞—é—â–∏–π—Å—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –≤–Ω—É—à–∞–µ—Ç –∏–º –ø–æ–¥–æ–∑—Ä–µ–Ω–∏—è, –∏ –æ–Ω–∏ —É–ø—É—Å–∫–∞—é—Ç –æ—Ç–∫—Ä—ã–≤–∞—é—â–∏–µ—Å—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏. –û—Ç—Å—é–¥–∞ –≤—ã—Ç–µ–∫–∞–µ—Ç –∏—Ö –¥—Ä—É–≥–∞—è —á–µ—Ä—Ç–∞ - –≤–µ—Ä–Ω–æ—Å—Ç—å. –£ —á–∏—Å–ª–∞ 4  –¥—Ä—É–∑—å—è –µ—â–µ —Å –¥–µ—Ç–∫–æ–≥–æ —Å–∞–¥–∞. –ù–∞ –Ω–∏—Ö –≤—Å–µ–≥–¥–∞ –º–æ–∂–Ω–æ –ø–æ–ª–æ–∂–∏—Ç—å—Å—è. –ï—Å–ª–∏ –æ–Ω–∏ —á—Ç–æ-–ª–∏–±–æ –æ–±–µ—â–∞—é—Ç, —Ç–æ –≤—ã–ø–æ–ª–Ω—è—Ç –æ–±–µ—â–∞–Ω–∏–µ. –õ—é–¥–∏ —ç—Ç–æ–≥–æ —á–∏—Å–ª–∞ –¥–æ–ª–∂–Ω—ã –∏—Å–∫–∞—Ç—å –∑–∞–Ω—è—Ç–∏—è, —Ç—Ä–µ–±—É—é—â–∏–µ –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–∏, –∞–∫–∫—É—Ä–∞—Ç–Ω–æ—Å—Ç–∏ –∏ —Ç–µ—Ä–ø–µ–Ω–∏—è. –û–Ω–∏ —É–º–µ—é—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å –º–æ–Ω–æ—Ç–æ–Ω–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è, –ø–µ—Ä–µ–¥ –∫–æ—Ç–æ—Ä—ã–º–∏ –¥—Ä—É–≥–∏–µ –±–µ—Å—Å–∏–ª—å–Ω—ã\n 
                        \n<b> –ú–∏–Ω—É—Å—ã </b> üòà\n\n–í —Ç–æ–º, —á—Ç–æ –∫–∞—Å–∞–µ—Ç—Å—è –∏—Ö —Å–µ–º—å–∏ –∏ –ª—é–±–∏–º—ã—Ö –ª—é–¥–µ–π, –æ–Ω–∏ –º–æ–≥—É—Ç –±—ã—Ç—å —Å–ª–∏—à–∫–æ–º –≤–ª–∞—Å—Ç–Ω—ã–º–∏. –ú–µ—Ä–∫–∞–Ω—Ç–∏–ª—å–Ω–æ—Å—Ç—å, —Ä–µ–≤–Ω–æ—Å—Ç—å –∏ –∏–Ω—Å—Ç–∏–Ω–∫—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏—Ü—ã. –õ—é–±–æ–µ –∂–∏–∑–Ω–µ–Ω–Ω–æ–µ –Ω–∞—á–∏–Ω–∞–Ω–∏–µ –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç –≤ —Å–≤–µ—Ç–µ –ø–æ–ª—É—á–µ–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–æ–≥–æ –±–ª–∞–≥–æ—Å–æ—Å—Ç–æ—è–Ω–∏—è. –≠—Ç–æ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç—Å—è –∏ –Ω–∞ –≤—ã–±–æ—Ä –ø–∞—Ä—Ç–Ω–µ—Ä–∞\n`,{parse_mode:'HTML',reply_markup:paidConsult.reply_markup});
                        
                    }
                    if(sum === 5) {
                        await bot.sendPhoto(chatId,'./img/5.jpg')
                        await bot.sendMessage(chatId, `‚ú®<b>–ß–∏—Å–ª–æ —Å—É–¥—å–±—ã ${sum}</b>‚ú®\n\n–ü–æ—Å—Ç–æ—è–Ω–Ω–æ–º —Å—Ç—Ä–µ–º–ª–µ–Ω–∏–∏ –∫ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è–º, –≤—Ä–æ–∂–¥–µ–Ω–Ω—ã–π —É–º, –æ–ø—Ç–∏–º–∏–∑–º –∏ –Ω–µ—É–µ–º–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è ‚Äî –∑–∞–ª–æ–≥ —Ç–æ–≥–æ, —á—Ç–æ –≤–∞—à–∞ –∂–∏–∑–Ω—å –±—É–¥–µ—Ç –Ω–∞–ø–æ–ª–Ω–µ–Ω–∞ –∑–Ω–∞–Ω–∏—è–º–∏. –í—ã —Å —Ä–æ–∂–¥–µ–Ω–∏—è –≤–µ—Å—å–º–∞ —Ç–∞–ª–∞–Ω—Ç–ª–∏–≤—ã–π —á–µ–ª–æ–≤–µ–∫. –ò–º–µ–Ω–Ω–æ –≤–∞—à–∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –ø–æ—Å–ø–æ—Å–æ–±—Å—Ç–≤—É—é—Ç –ø–æ–∏—Å–∫—É –ø–æ—Ö–æ–¥—è—â–µ–π –≤–∞–º –Ω–∏—à–∏ –¥–ª—è —Å–∞–º–æ–≤—ã—Ä–∞–∂–µ–Ω–∏—è. –í–∞–º –º–æ–∂–µ—Ç –±—ã—Ç—å —Ç—è–∂–µ–ª–æ –∫–æ–Ω—Ç–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å –æ–¥–Ω–∏–º–∏ –∏ —Ç–µ–º–µ –∂–µ –ª—é–¥—å–º–∏, –Ω–∞ –æ–¥–Ω–æ–π —Ä–∞–±–æ—Ç–µ –º–Ω–æ–≥–æ –ª–µ—Ç\n 
                        \n<b> –ú–∏–Ω—É—Å—ã </b> üòà\n\n–ù–µ–ø–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–æ, –Ω–µ–Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å, –Ω–µ—É—Ä–∞–≤–Ω–æ–≤–µ—à–µ–Ω–Ω–æ—Å—Ç—å, –±–µ–∑–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å, —á—Ä–µ–∑–º–µ—Ä–Ω–∞—è –¥–æ–≤–µ—Ä—á–∏–≤–æ—Å—Ç—å, –∞–≤–∞–Ω—Ç—é—Ä–∏–∑–º, —ç–∫—Å—Ü–µ–Ω—Ç—Ä–∏—á–Ω–æ—Å—Ç—å. –û–Ω–∏ –¥–æ–ª–∂–Ω—ã —Ç—â–∞—Ç–µ–ª—å–Ω–æ –≤—ã–±–∏—Ä–∞—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏—é, —Ç–∞–∫ –∫–∞–∫ —Ä—É—Ç–∏–Ω–∞ –∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —è—Ä–∫–∏—Ö –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–π –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–∏—á–∏–Ω–æ–π –Ω–µ—É–¥–∞—á–∏ –≤ –∂–∏–∑–Ω–∏\n`,{parse_mode:'HTML',reply_markup:paidConsult.reply_markup});
                       
                    }      
                    if(sum === 6) {
                        await bot.sendPhoto(chatId,'./img/6.jpg')
                        await bot.sendMessage(chatId, `‚ú®<b>–ß–∏—Å–ª–æ —Å—É–¥—å–±—ã ${sum}</b>‚ú®\n\n–£ –Ω–∏—Ö –æ—Å—Ç—Ä—ã–π —è–∑—ã–∫, –∫–æ—Ç–æ—Ä—ã–º –æ–Ω–∏ –∏–∑–¥–µ–≤–∞—é—Ç—Å—è –≤ —à—É—Ç–∫—É –∏ –∏–Ω–æ–≥–¥–∞ –ª–µ–≥–∫–æ –ø—Ä–∏—á–∏–Ω—è—é—Ç –±–æ–ª—å –ª—é–¥—è–º. –¢–∞–∫–∏–µ –ª—é–¥–∏ –ø—Ä–∏—Ç—è–≥–∞—Ç–µ–ª—å–Ω—ã, –º—è–≥–∫–∏, –æ–±—Ö–æ–¥–∏—Ç–µ–ª—å–Ω—ã, –ª—é–±—è—Ç —á—Ç–æ –ø–æ–¥–æ—Ä–æ–∂–µ. –û–Ω–∏ –ª–µ–≥–∫–æ –ø—Ä–∏–≤–ª–µ–∫–∞—é—Ç –∫ —Å–µ–±–µ –∫ —Å–µ–±–µ –ª—é–¥–µ–π, –ø–æ—Ç–∞–∫–∞—è –∏–º, –ø–æ–ª—å–∑—É—é—Ç—Å—è –∏—Ö –ª—é–±–æ–≤—å—é –∏ —É–≤–∞–∂–µ–Ω–∏–µ–º. –ò–º –Ω–µ –Ω—É–∂–Ω–æ –≥–ª–∞–≤–Ω—ã–º, –ª–∏–¥–µ—Ä–æ–º (—ç—Ç–æ –Ω–µ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –æ–Ω–∏ –Ω–µ –º–æ–≥—É—Ç) - –ø—Ä–æ—Å—Ç–æ –¥–ª—è –Ω–∏—Ö —ç—Ç–æ –Ω–µ –≤–∞–∂–Ω–æ\n 
                        \n<b> –ú–∏–Ω—É—Å—ã </b> üòà\n\n–ü—Ä–∏–¥–∏—Ä—á–∏–≤–æ—Å—Ç—å, –≤–æ—Ä—á–ª–∏–≤–æ—Å—Ç—å, —Å–∞–º–æ–¥–æ–≤–æ–ª—å—Å—Ç–≤–æ,  –ø–æ—Ç–∞–∫–∞–Ω–∏–µ —Å–≤–æ–∏–º –ø—Ä–∏—Ö–æ—Ç—è–º. –î–ª—è –Ω–∏—Ö —Ç–∏–ø–∏—á–Ω–∞ –Ω–µ–∫–æ—Ç–æ—Ä–∞—è –¥–≤–æ–π—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –≤ –ø–æ—Å—Ç—É–ø–∫–∞—Ö –∏ –¥–µ–π—Å—Ç–≤–∏—è—Ö\n`,{parse_mode:'HTML',reply_markup:paidConsult.reply_markup});
                        
                    }
                    if(sum === 7) {
                        await bot.sendPhoto(chatId,'./img/7.jpg')
                        await bot.sendMessage(chatId, `‚ú®<b>–ß–∏—Å–ª–æ —Å—É–¥—å–±—ã ${sum}</b>‚ú®\n\n–í—ã –≤–Ω–∏–∫–∞–µ—Ç–µ –≤–æ –≤—Å–µ, —Å—Ç–∞—Ä–∞—è—Å—å –¥–æ–∫–æ–ø–∞—Ç—å—Å—è –¥–æ —è—Å–Ω–æ–π –ø—Ä–∏—á–∏–Ω—ã –≤–µ—â–µ–π. –í—ã –Ω–∏—á–µ–≥–æ –Ω–µ –ø—Ä–∏–º–µ—Ç–µ –Ω–∞ –≤–µ—Ä—É, –Ω–æ —Å–æ—Å—Ç–∞–≤–∏—Ç–µ —Å–≤–æ–µ ‚Äî –∏ –ø—Ä–æ—á–Ω–æ–µ ‚Äî –º–Ω–µ–Ω–∏–µ –æ –ø—Ä–µ–¥–º–µ—Ç–µ. –ö–æ–≥–¥–∞ —Å–µ–º—è –º—ã—Å–ª–∏ –ø–æ–ø–∞–¥–∞–µ—Ç –≤ –≤–∞—à–µ –ø–æ–¥—Å–æ–∑–Ω–∞–Ω–∏–µ, –≤—ã –±—É–¥–µ—Ç–µ –¥–æ–ª–≥–æ –µ–≥–æ –≤—ã–Ω–∞—à–∏–≤–∞—Ç—å, –ø–æ–∫–∞ –≤ —É–º–µ –Ω–µ –∑–∞–∏–≥—Ä–∞–µ—Ç –≤—Å–µ–º–∏ –∫—Ä–∞—Å–∫–∞–º–∏ –æ–±—Ä–∞–∑, –¥–æ—Å–∫–æ–Ω–∞–ª—å–Ω–æ –≤–∞–º —Ç–µ–ø–µ—Ä—å –ø–æ–Ω—è—Ç–Ω—ã–π. –ø—Ä–∏—Ä–æ–∂–¥–µ–Ω–Ω—ã–µ —Ñ–∏–ª–æ—Å–æ—Ñ—ã, –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–Ω—ã–µ –±–æ–ª—å—à–µ –≤–æ–ø—Ä–æ—Å–∞–º–∏ –º—ã—Å–ª–∏ –∏ –¥—É—Ö–∞, –Ω–µ–∂–µ–ª–∏ –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–æ–π —Å—Ç–æ—Ä–æ–Ω–æ–π –∂–∏–∑–Ω–∏. –ü—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª–∏ —ç—Ç–æ–≥–æ —á–∏—Å–ª–∞ —á–∞—â–µ –≤—Å–µ–≥–æ –ª—é–¥–∏, —Å—Ç—Ä–µ–º—è—â–∏–µ—Å—è –ø–æ–∑–Ω–∞—Ç—å –∏ –ø—Ä–æ–Ω–∏–∫–Ω—É—Ç—å –≤ —Å—É—Ç—å –≤—Å–µ–≥–æ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ –∏ —Ç–∞–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ. –°–µ–º–µ—Ä–∫–∞ –Ω–µ –±—É–¥–µ—Ç –º–Ω–æ–≥–æ –±–æ–ª—Ç–∞—Ç—å, –æ–Ω–∞ –≤—ã—Å–ª—É—à–∞–µ—Ç –≤–∞—Å –∏ —Å–æ—Å—Ç–∞–≤–∏—Ç —Å–≤–æ–µ –º–Ω–µ–Ω–∏–µ\n 
                        \n<b> –ú–∏–Ω—É—Å—ã </b> üòà\n\n–ú–∏–Ω—É—Å–æ–≤ –Ω–µ—Ç‚Ä¶–ø–æ—á—Ç–∏\n`,{parse_mode:'HTML',reply_markup:paidConsult.reply_markup});
                       
                    }
                    if(sum === 8) {
                        await bot.sendPhoto(chatId,'./img/8.jpg')
                        await bot.sendMessage(chatId, `‚ú®<b>–ß–∏—Å–ª–æ —Å—É–¥—å–±—ã ${sum}</b>‚ú®\n\n–î–µ–Ω—å–≥–∏, –≤–ª–∞—Å—Ç—å –∏ —É—Å–ø–µ—Ö ‚Äî –≤–æ—Ç —á–µ–º –æ—Ç–º–µ—á–µ–Ω–∞ –∏—Ö –∂–∏–∑–Ω—å. –£ –Ω–∏—Ö —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω–∞—è —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –≤–æ–ø–ª–æ—â–∞—Ç—å –∏–¥–µ–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å, —Ä–µ—à–∞—é—Ç—Å—è –Ω–∞ —Ç–æ, –æ —á–µ–º –¥—Ä—É–≥–∏–µ –∏ –Ω–µ –º–µ—á—Ç–∞—é—Ç. –û–Ω–∏, –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å –¥—Ä—É–≥–∏–º–∏, –±–æ–ª–µ–µ —ç–Ω–µ—Ä–≥–∏—á–Ω—ã, –±–æ–µ–≤–∏—Ç—ã, —á–µ—Å—Ç–æ–ª—é–±–∏–≤—ã, –¥–∞—Ä–æ–≤–∏—Ç—ã, —É—Ä–∞–≤–Ω–æ–≤–µ—à–µ–Ω–Ω—ã –∏ —É–≤–µ—Ä–µ–Ω—ã –≤ —Å–µ–±–µ. –û–±–ª–∞–¥–∞—é—Ç —è—Ä–∫–æ –≤—ã—Ä–∞–∂–µ–Ω–Ω–æ–π –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ—Å—Ç—å—é, –æ—Ç–ª–∏—á–∞—é—Ç—Å—è –∫—Ä–∞–π–Ω–∏–º–∏ –≤–∑–≥–ª—è–¥–∞–º–∏, –∏–º–ø—É–ª—å—Å–∏–≤–Ω—ã–º –∏ —Ä–µ—à–∏—Ç–µ–ª—å–Ω—ã–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–æ–º, –¥–µ—Ä–∑–∫–∏. –î–æ–≤–µ—Ä—è—é—Ç —Ç–æ–ª—å–∫–æ —Å–µ–±–µ, –∞ –∏—Ö —Ä–µ—à–µ–Ω–∏—è –æ–ø–∏—Ä–∞—é—Ç—Å—è –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤—Å–µ—Ö ¬´–∑–∞ –∏ ¬´–ø—Ä–æ—Ç–∏–≤¬ª –¥–∞–Ω–Ω–æ–≥–æ –¥–µ–ª–∞\n 
                        \n<b> –ú–∏–Ω—É—Å—ã </b> üòà\n\n–í–ª–∞—Å—Ç–æ–ª—é–±–∏–µ, –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–≤–æ–∏—Ö —Å–∏–ª, —á—Ä–µ–∑–º–µ—Ä–Ω–æ–µ —Å—Ç—Ä–µ–º–ª–µ–Ω–∏–µ –∫ –±–æ–≥–∞—Ç—Å—Ç–≤—É, —Ü–∏–Ω–∏–∑–º, –Ω–µ–ø–æ–¥—á–∏–Ω–µ–Ω–∏–µ, –∏–≥—Ä–∞ –ª—é–¥—å–º–∏, —Å–∞–º–æ–≤–ª—é–±–ª–µ–Ω–Ω–æ—Å—Ç—å, —Ç–∏—Ä–∞–Ω—Å—Ç–≤–æ\n`,{parse_mode:'HTML',reply_markup:paidConsult.reply_markup});
                       
                    }
                    if(sum === 9) {
                        await bot.sendPhoto(chatId,'./img/9.jpg')
                        await bot.sendMessage(chatId, `‚ú®<b>–ß–∏—Å–ª–æ —Å—É–¥—å–±—ã ${sum}</b>‚ú®\n\n–ß—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã –∏ —Å–µ–Ω—Ç–∏–º–µ–Ω—Ç–∞–ª—å–Ω—ã, –≤ –≤—ã—Ä–∞–∂–µ–Ω–∏–∏ —Å–≤–æ–∏—Ö —á—É–≤—Å—Ç–≤ –ø—Ä–æ—è–≤–ª—è—é—Ç —Å–¥–µ—Ä–∂–∞–Ω–Ω–æ—Å—Ç—å, –Ω–µ –ª—é–±—è—Ç –¥–µ–ª–∞—Ç—å —Å–≤–æ–∏ —á—É–≤—Å—Ç–≤–∞ –¥–æ—Å—Ç–æ—è–Ω–∏–µ–º –æ–∫—Ä—É–∂–∞—é—â–∏—Ö. –û–Ω–∏ —Ä–æ–º–∞–Ω—Ç–∏—á–Ω—ã –∏ –º–µ—á—Ç–∞—Ç–µ–ª—å–Ω—ã. –ï—Å–ª–∏ –≤—Å—Ç—Ä–µ—Ç—è—Ç –Ω–∞—Å—Ç–æ—è—â—É—é –ª—é–±–æ–≤—å, —Ç–æ –ø–æ—Å–≤—è—â–∞—é—Ç —Å–µ–±—è –µ–π –±–µ–∑ –æ—Å—Ç–∞—Ç–∫–∞. –û–Ω–∏ –æ—Ç–Ω–æ—Å—è—Ç—Å—è –∫ –Ω–∞–∏–±–æ–ª–µ–µ –ø—Ä–µ–¥–∞–Ω–Ω—ã–º –∏ –≤–µ—Ä–Ω—ã–º —Å–ø—É—Ç–Ω–∏–∫–∞–º –∂–∏–∑–Ω–∏. –ò—Ö –∂–∏–∑–Ω–µ–Ω–Ω—ã–º –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ–º —è–≤–ª—è–µ—Ç—Å—è –±—ã—Ç—å –¥–ª—è –¥—Ä—É–≥–∏—Ö ¬´–º–∞—è–∫–æ–º¬ª, –∫–æ—Ç–æ—Ä—ã–π –æ—Å–≤–µ—â–∞–µ—Ç, –æ–±–ª–∞–≥–æ—Ä–∞–∂–∏–≤–∞–µ—Ç –∏ —É–∫–∞–∑—ã–≤–∞–µ—Ç –∏—Å—Ç–∏–Ω–Ω—ã–π —Å–º—ã—Å–ª –∂–∏–∑–Ω–∏ –≤—Å–µ–º —Ç–µ–º, –∫—Ç–æ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è –Ω–∞ –∏—Ö –ø—É—Ç–∏\n 
                        \n<b> –ú–∏–Ω—É—Å—ã </b> üòà\n\n–¢–µ –µ—â–µ –∫–∞–ø—Ä–∏–∑—É–ª–∏, —á–∞—Å—Ç–æ —É—Ö–æ–¥—è—Ç –≤ —Å–µ–±—è –∏ –∑–∞–∫—Ä—ã–≤–∞—é—Ç—Å—è –æ—Ç –ª—é–¥–µ–π. –ù–µ—Ç–µ—Ä–ø–∏–ª–∏–≤—ã, —á–∞—Å—Ç–æ –≤–∏—Ç–∞—é—Ç –≤ —Å–≤–æ–∏—Ö –∏–ª–ª—é–∑–∏—è—Ö\n`,{parse_mode:'HTML',reply_markup:paidConsult.reply_markup});
                      
                    }
                    user.consultMessageId = 0;
                    await user.save();
                } else {
                    
                    bot.sendMessage(chatId, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì (–Ω–∞–ø—Ä–∏–º–µ—Ä, 11.02.1986).');
                }  
            }

        } catch (error) {
            console.log(error)
        } 
    });




    bot.on('callback_query', async msg => {
        try {
            const data = msg.data;
            const chatId = msg.message.chat.id;
            const messageId = msg.message.message_id;
            const userId = msg.from.id;
            const currentTime = Date.now();
            const oneDay = 24 * 60 * 60 * 1000;
            console.log(msg)

            if (data === 'GETTARO') {
                await bot.deleteMessage(chatId,messageId)
                let pass = await bot.getChatMember("@tkkd13", msg.from.id);

                if (pass.status === "left") {
                    await bot.sendMessage(chatId,"–¢—ã –µ—â–µ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –º–æ–π –∫–∞–Ω–∞–ª ‚òπ",menu );
                } else {
                 
                        await bot.sendMessage(chatId,"–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é üìÇ",category);
                    
                }
            }


            if (data === 'getTaro') {
                let pass = await bot.getChatMember("@tkkd13", msg.from.id);

                if (pass.status === "left") {
                    await bot.editMessageText("–¢—ã –µ—â–µ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –º–æ–π –∫–∞–Ω–∞–ª ‚òπ", {
                        chat_id: chatId,
                        message_id: messageId,
                        reply_markup: menu.reply_markup
                    });

                }
                else {
                    await bot.editMessageText("üìÇ –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é ", {
                        chat_id: chatId,
                        message_id: messageId,
                        reply_markup: category.reply_markup
                    });
                }

            }

            const categories = ['category1', 'category2', 'category2', 'category3'];
            if (categories.includes(data)) {
                if (!userStates[userId]) {
                    userStates[userId] = {};
                }

                userStates[userId] = { category: data };

                await bot.sendMessage(chatId,"–ü–µ—Ä–µ—Ç–∞—Å–æ–≤—ã–≤–∞—é –∫–æ–ª–æ–¥—É...")
                

                await bot.sendChatAction(chatId, "typing")
                await new Promise(resolve => setTimeout(resolve, 1000));
                await bot.sendMessage(chatId,"–í—ã–±–µ—Ä–∏ –æ–¥–Ω—É –∫–∞—Ä—Ç—É –∏–∑ –∫–æ–ª–æ–¥—ã üëá",getTaro);
            }


            if (data === "/" && userStates[userId] && userStates[userId].category === "category1") {

                const user = await UserModel.findOne({ where: { chatId: chatId } })
              

                if (user.lastRequestCardDay && (currentTime - user.lastRequestCardDay) < oneDay) {
                    const timeLeft = oneDay - (currentTime - user.lastRequestCardDay);
                    const hoursLeft = Math.floor(timeLeft / (60 * 60 * 1000));
                    const minutesLeft = Math.floor((timeLeft % (60 * 60 * 1000)) / (60 * 1000));
                    const secondsLeft = Math.floor((timeLeft % (60 * 1000)) / 1000);

                    await bot.editMessageText("‚è≥ –í—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ –∫–∞—Ä—Ç—É —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–≥–æ –¥–Ω—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –∑–∞–≤—Ç—Ä–∞. \n" + `\n–û—Å—Ç–∞–ª–æ—Å—å –≤—Ä–µ–º–µ–Ω–∏ ${hoursLeft} —á–∞—Å–∞ ${minutesLeft} –º–∏–Ω—É—Ç ${secondsLeft} —Å–µ–∫—É–Ω–¥\n` , {
                        chat_id: chatId,
                        message_id: messageId,
                        reply_markup: consult.reply_markup
                    });

                    
                } else {

                    await bot.sendMessage(chatId,"–î–æ—Å—Ç–∞—é –∫–∞—Ä—Ç—É –∏–∑ –∫–æ–ª–æ–¥—ã...");
                    await bot.sendChatAction(chatId, "upload_photo");
                    await new Promise(resolve => setTimeout(resolve, 1000));

                    const { category } = userStates[userId];
                    console.log(category)
                    const { cardImage, predictionText } = getRandomCard(category);
                    await bot.sendPhoto(chatId, cardImage);
                    await bot.sendMessage(chatId, predictionText, consult);
                    user.lastRequestCardDay = currentTime;
                    await user.save();
                   
                }



            }

            if (data === "/" && userStates[userId] && userStates[userId].category === "category2") {

                const user = await UserModel.findOne({ where: { chatId: chatId } });

                if (user.quantityAnswersYoN < 2 && (currentTime - user.lastRequestYoN) > oneDay) {
                    console.log(user.quantityAnswersYoN + "--------------------------------------------------------") 
                    await bot.sendMessage(chatId,"–î–æ—Å—Ç–∞—é –∫–∞—Ä—Ç—É –∏–∑ –∫–æ–ª–æ–¥—ã...");
                    await bot.sendChatAction(chatId, "upload_photo");
                    await new Promise(resolve => setTimeout(resolve, 1000));

                    const { category } = userStates[userId];
                    console.log(category)
                    const { cardImage, predictionText } = getRandomCard(category);
                    await bot.sendPhoto(chatId, cardImage);
                    await bot.sendMessage(chatId, predictionText);
                    user.quantityAnswersYoN += 1;
                    await user.save();

                    await bot.sendMessage(chatId, "–ö–∞—Ä—Ç–∞ –Ω–æ–º–µ—Ä:  " + user.quantityAnswersYoN + " üåô", consult)

                } else {
                    const timeLeft = oneDay - (currentTime - user.lastRequestCardDay);
                    const hoursLeft = Math.floor(timeLeft / (60 * 60 * 1000));
                    const minutesLeft = Math.floor((timeLeft % (60 * 60 * 1000)) / (60 * 1000));
                    const secondsLeft = Math.floor((timeLeft % (60 * 1000)) / 1000);
                    await bot.editMessageText("‚è≥ –í—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ 3 –æ—Ç–≤–µ—Ç–∞ —Å–µ–≥–æ–¥–Ω—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –∑–∞–≤—Ç—Ä–∞. \n" + `\n–û—Å—Ç–∞–ª–æ—Å—å –≤—Ä–µ–º–µ–Ω–∏ ${hoursLeft} —á–∞—Å–∞ ${minutesLeft} –º–∏–Ω—É—Ç ${secondsLeft} —Å–µ–∫—É–Ω–¥\n`, {
                        chat_id: chatId,
                        message_id: messageId,
                        reply_markup: consult.reply_markup
                    });
                }
                
                if (user.quantityAnswersYoN === 2 && (currentTime - user.lastRequestYoN) > oneDay) {
                    await bot.sendMessage(chatId,"–î–æ—Å—Ç–∞—é –∫–∞—Ä—Ç—É –∏–∑ –∫–æ–ª–æ–¥—ã...");
                    await bot.sendChatAction(chatId, "upload_photo");
                    await new Promise(resolve => setTimeout(resolve, 1000));

                    const { category } = userStates[userId];
                    console.log(category)
                    const { cardImage, predictionText } = getRandomCard(category);
                    await bot.sendPhoto(chatId, cardImage);
                    await bot.sendMessage(chatId, predictionText);
                    user.quantityAnswersYoN += 1;
                    await user.save();
                    const timeLeft = oneDay - (currentTime - user.lastRequestCardDay);
                    const hoursLeft = Math.floor(timeLeft / (60 * 60 * 1000));
                    const minutesLeft = Math.floor((timeLeft % (60 * 60 * 1000)) / (60 * 1000));
                    const secondsLeft = Math.floor((timeLeft % (60 * 1000)) / 1000);

                    await bot.sendMessage(chatId,"‚è≥ –≠—Ç–æ –±—ã–ª 3 –æ—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –∑–∞–≤—Ç—Ä–∞." + `\n–û—Å—Ç–∞–ª–æ—Å—å –≤—Ä–µ–º–µ–Ω–∏ ${hoursLeft} —á–∞—Å–∞ ${minutesLeft} –º–∏–Ω—É—Ç ${secondsLeft} —Å–µ–∫—É–Ω–¥\n`,consult )
                  
                } 

                if (user.quantityAnswersYoN === 3) { 

                    user.quantityAnswersYoN = 0;
                    user.lastRequestYoN = currentTime;
                    await user.save();
                }
            }

         
     

            if (data === "/" && userStates[userId] && userStates[userId].category === "category3") {
                const user = await UserModel.findOne({ where: { chatId: chatId } })
                await user.update({PaidCategory: userStates[userId].category})
                await user.save()

                    await bot.sendMessage(chatId,"–î–æ—Å—Ç–∞—é –∫–∞—Ä—Ç—É –∏–∑ –∫–æ–ª–æ–¥—ã...");  
    
                    await bot.sendChatAction(chatId, "upload_photo");
                    await new Promise(resolve => setTimeout(resolve, 1000));

                    await bot.sendMessage(chatId,"–í—ã–∫–ª–∞–¥—ã–≤–∞—é 1 –∫–∞—Ä—Ç—É ");  
                    await new Promise(resolve => setTimeout(resolve, 1000));

                    await bot.sendMessage(chatId,"–ü—Ä–µ–¥—Å—Ç–∞–≤—å —Ç–æ–≥–æ –æ –∫–æ–º —Ö–æ—á–µ—à—å –∑–Ω–∞—Ç—å .... ");  
                    await bot.sendChatAction(chatId, "upload_photo");
                    await new Promise(resolve => setTimeout(resolve, 3000));
                        
                    const category = user.PaidCategory
                    console.log(category)
                    const { cardImage, predictionText } = getRandomCard(category);
                    await bot.sendPhoto(chatId, cardImage);
                    await bot.sendMessage(chatId, predictionText, consult);
                    await user.update({ invoiceMessageId: 0 })
                    await user.update({ PaidCategory: 0 })
                    await user.save();
                  
                   
                }

            if (data === 'category4') {
                const user = await UserModel.findOne({ where: { chatId: chatId } })
                await user.update({consultMessageId: 1})
                await user.save()
                await bot.sendMessage(chatId,"–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —á–∏—Å–ª–æ —Å—É–¥—å–±—ã –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –¥–∞—Ç—É —Å–≤–æ–µ–≥–æ —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ 25.08.1999");  
            }

        } catch (error) {
            console.error(error);
        }
    });


    bot.on('pre_checkout_query', async query => {
        try {
            await handlePreCheckoutQuery(bot, query);
        } catch (error) {
            console.error(error);
        }

    });
    bot.on('successful_payment', async msg => {
        try {
             const chatId = msg.chat.id;
             const messageId = msg.message_id;
            await bot.deleteMessage(chatId,messageId-1)
            
            await handleSuccessfulPayment(bot, msg);
            const user = await UserModel.findOne({ where: { chatId: chatId } })
            user.invoiceMessageId = Date.now();
            await user.save()

        } catch (error) {
            console.error(error);
        }
    });
    console.log('Bot is running...');

}
start()
